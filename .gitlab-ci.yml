stages:
  - build
  - deploy

build astro:
  stage: build
  image: oven/bun:1.1-alpine
  variables:
    GIT_SUBMODULE_STRATEGY: "recursive"
    GIT_SUBMODULE_FORCE_HTTPS: "true"
  before_script:
    - bun install --production --frozen-lockfile
  script:
    - bun run build
  artifacts:
    paths:
      - dist

deploy cloudflare-pages:
  stage: deploy
  image: node:current-alpine
  script:
    - npx wrangler pages deploy "dist" --project-name "$CLOUDFLARE_PROJECT_NAME" --branch "$CI_COMMIT_BRANCH" --commit-hash "$CI_COMMIT_SHA" --commit-message "$CI_COMMIT_MESSAGE"
  dependencies:
    - build astro
  environment:
    name: "Cloudflare pages ${CLOUDFLARE_PROJECT_NAME}"
    url: "https://${CLOUDFLARE_PROJECT_NAME}.pages.dev/"
  variables:
    CLOUDFLARE_ACCOUNT_ID: ""
    CLOUDFLARE_API_TOKEN: ""
    CLOUDFLARE_PROJECT_NAME: ""
  rules:
    - if: "$CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH"
      when: manual
    - if: "$CLOUDFLARE_ACCOUNT_ID && $CLOUDFLARE_API_TOKEN && $CLOUDFLARE_PROJECT_NAME"
      when: on_success
    - when: never

pages:
  stage: deploy
  script:
    - echo "Pages accessible through ${CI_PAGES_URL}/${PAGES_PREFIX}"
  dependencies:
    - build astro
  artifacts:
    paths:
      - dist
  variables:
    PAGES_PREFIX: ""
  pages:
    path_prefix: "${PAGES_PREFIX}"
  environment:
    name: "GitLab Pages"
    url: $CI_PAGES_URL
  publish: dist
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_PAGES_DOMAIN && $CI_PAGES_URL
      when: on_success
    - when: never
